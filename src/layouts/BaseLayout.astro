---
import '../styles/app.scss'
import { PageTransition } from 'astro-page-transition';

import { Icon } from 'astro-icon'

import { AstroSeo } from '@astrolib/seo';
import { Image } from '@astrojs/image/components';

import { getLightBackgroundColor, getTextColor} from '@lib/helpers';

import Footer from '@components/Footer.astro'
import Nav from '@components/Nav.astro';

export let frontmatter
const { index, title, subtitle, image, description, bold, color, size, carousel } = frontmatter || Astro.props.frontmatter || Astro.props;

function herostyles(){
	return bold ? 'is-bold ': ''
	+ image ? ' has-background ' : carousel ? 'is-carousel ' : 'has-background'

}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

---

<!DOCTYPE html>
<html lang="nl">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width" />
	<link rel="icon" type="image/png" href="/favicon.png" />
	<meta name="generator" content={Astro.generator} />
	<meta name="msapplication-TileColor" content="#ffffff">
	<meta name="theme-color" content="#ffffff">
	<link href="/fonts/stylesheet.css" rel="stylesheet" rel="preload" as="style">
	<link rel="icon" href="/favicon.png" />
	<script src="/src/pwa.ts"></script>
	<link rel="dns-prefetch" href="https://fonts.cdnfonts.com">
	<link rel="preconnect" crossorigin="anonymous" href="https://fonts.cdnfonts.com">

	<AstroSeo
	title={'Salon Essentia - ' + title}
	description={description}
	canonical={canonicalURL.toString()}
	openGraph={{
		title: 'Salon Essentia - ' + title,
		description: description,
		url: Astro.request.url.toString(),
		site_name: "Salon Essentia",
		type: "website",
		locale: "nl_NL",
		images: [
			{
				url: 'https://salonessentia.nl' + image
			}
		]
	}}


	/>

	<!-- Twitter -->
	<meta property="twitter:card" content="summary_large_image">
	<meta property="twitter:title" content={title}>
	<meta property="twitter:description" content={description}>
	<meta property="twitter:image" content={"https://salonessentia.nl" + image}>
	<meta property="og:image" content={"https://salonessentia.nl" + image}>
</head>
<body>
	<link itemprop="thumbnailUrl" href={"https://salonessentia.nl" + image}>
	<span class="hidden" itemprop="thumbnail" itemscope itemtype="http://schema.org/ImageObject">
		<link itemprop="url" href={"https://salonessentia.nl" + image}>
	</span>
	<PageTransition speed={500} color="hsl(44deg, 100%, 77%)" zIndex={99} />
	<header class={"hero is-fullheight-with-navbar has-background " + herostyles() + ' ' + size + ' ' + color} >
		<!-- Hero Image: will provide an image covering the whole Hero -->
		<Image loading="lazy" decoding="async" aspectRatio={16/9} width="1920" class="hero-image" src={image} alt={subtitle} title={title} />
		<!-- Hero head: will stick at the top -->
		<div class="hero-head">
			<Nav />
		</div>
		<!-- Hero content: will be in the middle -->
		<div class="hero-body">
			<div class="container">
				<div class={"box notification is-transparent content " + getLightBackgroundColor(color)} style="max-width: 440px;">
					<h2 class={"title is-size-4 " + getTextColor(color)}>{title}</h2>
					<h3 class={"subtitle is-size-5 " + getTextColor(color)}>{subtitle}</h3>
					<div class={"content " + getTextColor(color)}>
						<p>{description}</p>
					</div>
				</div>
			</div>
		</div>
	</header>
	<main class={"section " + getLightBackgroundColor(color)}>
		<div class="container raised">
			<slot />
		</div>
	</main>
	<Footer />

	<a class="button is-rounded is-whatsapp is-floating" href="https://api.whatsapp.com/send?phone=31640026648&text=Dag%20Salon%20Essentia%2C%20ik%20heb%20een%20vraag..." target="_blank">
		<span class="icon is-large">
			<Icon pack="fa" name="whatsapp" />
		</span>
		<span class="is-sr-only">Connect over whatsapp</span>
	</a>

</body>
</html>

<style lang="scss">
	@media screen and (max-width: 768px) {
		.hero.is-halfheight .hero-body, .hero.is-fullheight .hero-body, .hero.is-fullheight-with-navbar .hero-body {
			align-items: end;
			padding: .75rem 0.5rem;
		}

		.hero .hero-image {
			position: initial !important;
		}

		.hero-body {
			flex-grow: 0;

			.box {
				max-width: unset !important;
			}
		}
	}

	@media screen and (max-width: 768px) and (orientation: portrait) {
		.hero-image {
			height: 60vh !important;
		}
	}

	.is-floating{
		position:fixed;
		bottom:2rem;
		left:2rem;
		z-index:10;

		width: 4rem;
		height: 4rem;
		overflow:hidden;
		border-radius: 2rem;
	}

	.is-floating .icon {
		margin-left: -0.75rem;
		margin-right: -0.75rem;
	}

	@media screen and (max-width: 768px) {
		.is-floating {
			bottom: 1rem;
			left: 1rem;
		}
	}
</style>